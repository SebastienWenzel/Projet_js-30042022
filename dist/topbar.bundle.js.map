{"version":3,"file":"topbar.bundle.js","mappings":";;;;;AAAA;AACA,MAAMA,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAnB;AACA,MAAMC,UAAU,GAAGF,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAnB,EACA;;AACA,IAAIE,UAAU,GAAG,KAAjB,EACA;;AACA,IAAIC,aAAJ,EAEA;;AACA,MAAMC,SAAS,GAAG,MAAM;AACtBD,EAAAA,aAAa,CAACE,SAAd,CAAwBC,MAAxB,CAA+B,MAA/B;AACD,CAFD,EAKA;AACA;AACA;;;AACA,MAAMC,gBAAgB,GAAG,MAAM;AAC7BJ,EAAAA,aAAa,GAAGJ,QAAQ,CAACS,aAAT,CAAuB,KAAvB,CAAhB;AACAL,EAAAA,aAAa,CAACE,SAAd,CAAwBI,GAAxB,CAA4B,aAA5B;AACAN,EAAAA,aAAa,CAACO,gBAAd,CAA+B,OAA/B,EAAwCC,KAAK,IAAI;AAC/CA,IAAAA,KAAK,CAACC,eAAN;AACD,GAFD;AAGAT,EAAAA,aAAa,CAACU,MAAd,CAAqBZ,UAAU,CAACD,aAAX,CAAyB,IAAzB,EAA+Bc,SAA/B,CAAyC,IAAzC,CAArB;AACAb,EAAAA,UAAU,CAACY,MAAX,CAAkBV,aAAlB;AACD,CARD,EAUA;AACA;;;AACA,MAAMY,QAAQ,GAAG,MAAM;AACrB,MAAI,CAACZ,aAAL,EAAoB;AAClBI,IAAAA,gBAAgB;AACjB;;AACDJ,EAAAA,aAAa,CAACE,SAAd,CAAwBI,GAAxB,CAA4B,MAA5B;AACD,CALD,EAOA;;;AACA,MAAMO,gBAAgB,GAAGL,KAAK,IAAI;AAChC,MAAIT,UAAJ,EAAgB;AACdE,IAAAA,SAAS;AACV,GAFD,MAEO;AACLW,IAAAA,QAAQ;AACT;;AACDb,EAAAA,UAAU,GAAG,CAACA,UAAd;AACD,CAPD,EASA;AACA;;;AACAJ,UAAU,CAACY,gBAAX,CAA4B,OAA5B,EAAqCC,KAAK,IAAI;AAC5CA,EAAAA,KAAK,CAACC,eAAN;AACAI,EAAAA,gBAAgB;AACjB,CAHD,GAKA;;AACAC,MAAM,CAACP,gBAAP,CAAwB,OAAxB,EAAiC,MAAM;AACrC,MAAIR,UAAJ,EAAgB;AACdc,IAAAA,gBAAgB;AACjB;AACF,CAJD,GAMA;AACA;;AACAC,MAAM,CAACP,gBAAP,CAAwB,QAAxB,EAAkCC,KAAK,IAAI;AACzC,MAAIM,MAAM,CAACC,UAAP,GAAoB,GAApB,IAA2BhB,UAA/B,EAA2C;AACzCc,IAAAA,gBAAgB;AACjB;AACF,CAJD,E","sources":["webpack://STARTER/./src/assets/js/topbar.js"],"sourcesContent":["// Nous créons les références pour notre menu et l’icône du menu :\r\nconst iconMobile = document.querySelector(\".header-menu-icon\");\r\nconst headerMenu = document.querySelector(\".header-menu\");\r\n// Cette propriété permettra de savoir si le menu est ouvert :\r\nlet isMenuOpen = false;\r\n// Cette propriété permettra de savoir si le menu mobile est créé :\r\nlet mobileMenuDOM;\r\n\r\n// Pour fermer le menu il suffit d’enlever la classe open sur le menu :\r\nconst closeMenu = () => {\r\n  mobileMenuDOM.classList.remove(\"open\");\r\n};\r\n\r\n\r\n// Nous créons une div et nous ajoutons la classe mobile-menu.\r\n// Nous empêchons la fermeture du menu sur un clic à l’intérieur.\r\n// Nous y clonons ensuite les liens du menu normal.\r\nconst createMobileMenu = () => {\r\n  mobileMenuDOM = document.createElement(\"div\");\r\n  mobileMenuDOM.classList.add(\"mobile-menu\");\r\n  mobileMenuDOM.addEventListener(\"click\", event => {\r\n    event.stopPropagation();\r\n  });\r\n  mobileMenuDOM.append(headerMenu.querySelector(\"ul\").cloneNode(true));\r\n  headerMenu.append(mobileMenuDOM);\r\n};\r\n\r\n// Si le menu n’est pas créé nous le créons.\r\n// Dans tous les cas nous l’ouvrons en ajoutant la classe open :\r\nconst openMenu = () => {\r\n  if (!mobileMenuDOM) {\r\n    createMobileMenu();\r\n  }\r\n  mobileMenuDOM.classList.add(\"open\");\r\n};\r\n\r\n// Permet d’ouvrir ou de fermer le menu en fonction de son état :\r\nconst toggleMobileMenu = event => {\r\n  if (isMenuOpen) {\r\n    closeMenu();\r\n  } else {\r\n    openMenu();\r\n  }\r\n  isMenuOpen = !isMenuOpen;\r\n};\r\n\r\n// Un clic sur l’icône va ouvrir ou fermer le menu \r\n// et empêcher la propagation de l’événement à window :\r\niconMobile.addEventListener(\"click\", event => {\r\n  event.stopPropagation();\r\n  toggleMobileMenu();\r\n});\r\n\r\n// Nous récupérons les clics sur window pour fermer le menu.\r\nwindow.addEventListener(\"click\", () => {\r\n  if (isMenuOpen) {\r\n    toggleMobileMenu();\r\n  }\r\n});\r\n\r\n// Si la fenêtre est agrandie et qu’elle dépasse 480px de largeur\r\n// Alors nous fermons le menu si il est ouvert :\r\nwindow.addEventListener(\"resize\", event => {\r\n  if (window.innerWidth > 480 && isMenuOpen) {\r\n    toggleMobileMenu();\r\n  }\r\n});"],"names":["iconMobile","document","querySelector","headerMenu","isMenuOpen","mobileMenuDOM","closeMenu","classList","remove","createMobileMenu","createElement","add","addEventListener","event","stopPropagation","append","cloneNode","openMenu","toggleMobileMenu","window","innerWidth"],"sourceRoot":""}